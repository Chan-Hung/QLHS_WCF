//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLHS_WCF.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISudentService1")]
    public interface ISudentService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISudentService1/SelectStudent", ReplyAction="http://tempuri.org/ISudentService1/SelectStudentResponse")]
        System.Data.DataTable SelectStudent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISudentService1/SelectStudent", ReplyAction="http://tempuri.org/ISudentService1/SelectStudentResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SelectStudentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISudentService1/InsertStudent", ReplyAction="http://tempuri.org/ISudentService1/InsertStudentResponse")]
        bool InsertStudent(DTO.StudentDTO student, string err);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISudentService1/InsertStudent", ReplyAction="http://tempuri.org/ISudentService1/InsertStudentResponse")]
        System.Threading.Tasks.Task<bool> InsertStudentAsync(DTO.StudentDTO student, string err);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISudentService1/UpdateStudent", ReplyAction="http://tempuri.org/ISudentService1/UpdateStudentResponse")]
        bool UpdateStudent(DTO.StudentDTO student, string err);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISudentService1/UpdateStudent", ReplyAction="http://tempuri.org/ISudentService1/UpdateStudentResponse")]
        System.Threading.Tasks.Task<bool> UpdateStudentAsync(DTO.StudentDTO student, string err);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISudentService1/DeleteStudent", ReplyAction="http://tempuri.org/ISudentService1/DeleteStudentResponse")]
        bool DeleteStudent(DTO.StudentDTO student, string err);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISudentService1/DeleteStudent", ReplyAction="http://tempuri.org/ISudentService1/DeleteStudentResponse")]
        System.Threading.Tasks.Task<bool> DeleteStudentAsync(DTO.StudentDTO student, string err);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISudentService1Channel : QLHS_WCF.ServiceReference1.ISudentService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SudentService1Client : System.ServiceModel.ClientBase<QLHS_WCF.ServiceReference1.ISudentService1>, QLHS_WCF.ServiceReference1.ISudentService1 {
        
        public SudentService1Client() {
        }
        
        public SudentService1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SudentService1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SudentService1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SudentService1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable SelectStudent() {
            return base.Channel.SelectStudent();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SelectStudentAsync() {
            return base.Channel.SelectStudentAsync();
        }
        
        public bool InsertStudent(DTO.StudentDTO student, string err) {
            return base.Channel.InsertStudent(student, err);
        }
        
        public System.Threading.Tasks.Task<bool> InsertStudentAsync(DTO.StudentDTO student, string err) {
            return base.Channel.InsertStudentAsync(student, err);
        }
        
        public bool UpdateStudent(DTO.StudentDTO student, string err) {
            return base.Channel.UpdateStudent(student, err);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateStudentAsync(DTO.StudentDTO student, string err) {
            return base.Channel.UpdateStudentAsync(student, err);
        }
        
        public bool DeleteStudent(DTO.StudentDTO student, string err) {
            return base.Channel.DeleteStudent(student, err);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteStudentAsync(DTO.StudentDTO student, string err) {
            return base.Channel.DeleteStudentAsync(student, err);
        }
    }
}
